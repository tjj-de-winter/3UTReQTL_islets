#!/bin/bash

### Description ###

# This script first recalibrates a pseudobulk bam file and subsequently filters and calls indels and SNPs into a g.vcf file  
# The code is based on the best Best Practices Workflows from GATK

### Input variables ###
if [ $# -ne 5 ]
then
    echo "Usage: $0 <BAM file> <Genome FASTA file> <dbSNP VCF> <clinvar VCF> <output path>"
    echo "1) BAM file as generated by genome_alignment.sh"
    echo "2) reference genome FASTA file, unzipped"
    echo "3) dbSNP feature file (.vcf/.vcf.gz)"
    echo "4) clinvar feature file (.vcf/.vcf.gz)"
    echo "5) output path"
    exit
fi

inbam=$1
reference=$2
# for reference use /exports/ana-scarlab/group_references/ensembl/human/102/Homo_sapiens.GRCh38.dna.primary_assembly_ERCC.fa
dbsnp=$3
# /exports/ana-scarlab/group_references/Feature_files/human/dbSNP.vcf.gz
clinvar=$4
outpath=$5

### Paths to utilities and scripts ###
p2samtools=$(which samtools)
p2gatk=$(which gatk)
p2java=$(which java)
p2picard=$(which picard.jar)

### Parameters ###
threads=8 # Adjust as needed

### Code ###

samplename=$(${p2samtools} view $inbam | head -n 1 | grep "RG:" | awk -F "RG:Z:" '{print $2}')

outbam=${outpath}/SNP_call_${samplename}
bam=${outbam}/${samplename}.bam
mkdir -p ${outbam}

# check java version, needs to be JDK version 8 to work with GATK 4.1.9.0

v="$(${p2java} -version 2>&1)"
version=$(echo ${v} | awk -F "." '/version/ {print $2}')
if [ ${version} -ne "8" ]
then
    echo "Java JDK needs to be version 8"
    exit
fi

# check if indexed and dictionaries are present for fasta and featurefiles
suffix=$(echo ${reference} | awk -F "." '{print $(NF)}') 
dict=$(ls ${reference%${suffix}}dict 2>1&) 
index=$(ls ${reference}.fai 2>1&)
file=$(echo ${reference} | awk -F "/" '{print $(NF)}')

if [ -z "$dict" ] 
then
    echo "Dictionary file of ${file} not present in the same folder\nPlease make a dictionary file with 'Picard CreateSequenceDictionary"
    dict=false
fi 

if [ -z "${index}" ]
then
    echo "Indexed file of ${file} not present in the same folder\nPlease make an index file with 'samtools faidx'"
    index=false
fi

index_dbsnp=$(ls ${dbsnp}.tbi 2>1&)

if [ -z "${index_dbsnp}" ]
then
    echo "Indexed file of dbSNP feature file  not present in the same folder\nPlease make an index file with 'gatk IndexFeatureFile'"
    index_dbsnp=false
fi

index_clinvar=$(ls ${clinvar}.idx 2>1&)

if [ -z "${index_clinvar}" ]
then
    echo "Indexed file of clinvar feature file  not present in the same folder\nPlease make an index file with 'gatk IndexFeatureFile'"
    index_clinvar=false
fi

if [ ${dict} = "false" ] || [ ${index} = "false" ] || [ ${index_dbsnp} = "false" ] || [ ${index_clinvar} = "false" ]
then
    exit
fi

# markduplicates
${p2gatk} MarkDuplicatesSpark \
    -I ${inbam} \
    -O ${bam%.bam}.nodup.bam \
    -M ${outbam}/${samplename}.marked_dup_metrics.txt \
    --conf 'spark.executor.cores='${threads} \
    --remove-sequencing-duplicates

# base recal
${p2gatk} BaseRecalibrator \
    -I ${bam%.bam}.nodup.bam \
    -R ${reference} \
    --known-sites ${dbsnp} \
    --known-sites ${clinvar} \
    -O ${outbam}/${samplename}.before.recal.table

# apply baserecal before
${p2gatk} ApplyBQSR \
    -R ${reference} \
    -I ${bam%.bam}.nodup.bam \
    --bqsr-recal-file ${outbam}/${samplename}.before.recal.table \
    -O ${bam%.bam}.nodup.baserecal.bam

# baserecal after
${p2gatk} BaseRecalibrator \
    -I ${bam%.bam}.nodup.baserecal.bam \
    -R ${reference} \
    --known-sites ${dbsnp} \
    --known-sites ${clinvar} \
    -O ${outbam}/${samplename}.after.recal.table

# plot base recalibration with AnalyzeCovariates
${p2gatk} AnalyzeCovariates \
    -before ${outbam}/${samplename}.before.recal.table \
    -after ${outbam}/${samplename}.after.recal.table \
    -plots ${outbam}/${samplename}.AnalyzeCovariates.pdf

# haplotypecaller
${p2gatk} --java-options "-Xmx300g" HaplotypeCaller \
    -R ${reference} \
    -I ${bam%.bam}.nodup.baserecal.bam \
    -O ${outpath}/${samplename}.g.vcf.gz \
    --dbsnp ${dbsnp} \
    -ERC GVCF \
    -G AS_StandardAnnotation \
    -A ReferenceBases \
    -A AlleleFraction \
    -A BaseQuality

exit 
